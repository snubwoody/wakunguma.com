---
import { formatDate } from "../../lib/format";
import {Picture} from "astro:assets";
import type {CollectionEntry} from "astro:content";

type Props = {
    posts: CollectionEntry<"articles">[]
};

const {posts}: Props = Astro.props;

const filters: Map<string,number> = new Map();
filters.set("All",posts.length);

posts.forEach(post => {
    const tags = post.data.tags;
    for (const tag of tags){
        const count = filters.get(tag);

        if (!count){
            filters.set(tag,1);
            continue;
        }

        filters.set(tag,count+1);
    }
});


const activeFilter = Astro.url.searchParams.get("filter") ?? "All";
let filteredPosts:CollectionEntry<"articles">[];
if (activeFilter === "All") {
    filteredPosts = posts;
} else {
    filteredPosts = posts
        .filter(post => post.data.tags.includes(activeFilter));
}
---


<section class="p-24 md:px-40 md:py-44 space-y-36">
    <header class="space-y-12">
        <h3>Articles</h3>
        <ul class="flex gap-12 items-center">
            {Array.from(filters).map(([filter,count]) =>
                <li>
                    <a
                    href=`/blog?filter=${filter}`
                    data-selected={activeFilter === filter}
                    class="filter-chip"
                    >
                        {filter}
                        <span class="text-xs">{count}</span>
                    </a>
                </li>

            )}
        </ul>
    </header>
    <ul class="space-y-24">
        {filteredPosts.map(post =>
            <li>
                <a href={`/blog/${post.id}`} class="blog-post" data-astro-prefetch>
                    <Picture
                            widths={[360,720,1280,post.data.imageAsset.width]}
                            sizes={`(max-width: 360px) 360px, (max-width: 720px) 720px, (max-width: 1280px) 1280px (max-width: 1600px) ${post.data.imageAsset}px`}
                            src={post.data.imageAsset}
                            formats={["webp","avif","jpg"]}
                            alt=""
                            class="rounded-md"
                    />
                    <div class="grid place-items-center p-12">
                        <h4 class="mb-8 max-md:text-h5 font-bold text-center">{post.data.title}</h4>
                        <p class="text-sm">
                            {formatDate(post.data.published.toString())}
                        </p>
                    </div>
                </a>
            </li>
        )}
    </ul>
</section>

<style>
    .filter-chip{
        display: flex;
        align-items: start;
        border: 1px solid transparent;
        transition: 150ms all;
        gap: 4px;
        padding: 4px 12px;
        border-radius: var(--radius-full);
        cursor: pointer;

        &:hover{
            border-color: var(--color-purple-100);
        }

        &[data-selected="true"]{
            background-color: var(--color-purple-100);
            color: var(--color-neutral-950);
        }

        [data-theme="light"] &:hover{
            border-color: var(--color-purple-500);
        }

        [data-theme="light"] &[data-selected="true"]{
            background-color: var(--color-purple-500);
            color: var(--color-purple-50);
        }
    }
</style>
